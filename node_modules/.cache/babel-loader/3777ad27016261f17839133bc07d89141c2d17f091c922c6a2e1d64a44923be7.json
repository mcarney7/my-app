{"ast":null,"code":"import React,{Component}from'react';import{DropdownButton,Dropdown}from'react-bootstrap';import List from'./List';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";class FilteredList extends Component{constructor(props){super(props);// Add a new key/value pair in the state to keep track of type\n// Sets the state whenever the user types on the search bar\nthis.onSearch=event=>{this.setState({search:event.target.value.toLowerCase()});};// TODO: Add a new method to handle dropdown selection\nthis.handleTypeChange=type=>{this.setState({type});};// TODO: Add a new method to filter produce based on type\nthis.filterType=item=>{const{type}=this.state;return type===\"all\"||item.type.toLowerCase()===type.toLowerCase();};// TODO: Modify filterItem to consider both search and type filters\nthis.filterItem=item=>{return item.name.toLowerCase().search(this.state.search)!==-1&&this.filterType(item);};this.state={search:\"\",type:\"all\"// \"all\" initially to show all produce\n};}render(){const produceTypes=[\"all\",\"fruit\",\"vegetable\"];// Add other types as needed\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"filter-list\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Produce Search\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search\",onChange:this.onSearch}),/*#__PURE__*/_jsx(DropdownButton,{title:\"Filter by Type: \".concat(this.state.type),id:\"produce-type-dropdown\",onSelect:this.handleTypeChange,children:produceTypes.map(type=>/*#__PURE__*/_jsx(Dropdown.Item,{eventKey:type,children:type.charAt(0).toUpperCase()+type.slice(1)},type))}),/*#__PURE__*/_jsx(List,{items:this.props.items.filter(this.filterItem)})]});}}export default FilteredList;","map":{"version":3,"names":["React","Component","DropdownButton","Dropdown","List","jsx","_jsx","jsxs","_jsxs","FilteredList","constructor","props","onSearch","event","setState","search","target","value","toLowerCase","handleTypeChange","type","filterType","item","state","filterItem","name","render","produceTypes","className","children","placeholder","onChange","title","concat","id","onSelect","map","Item","eventKey","charAt","toUpperCase","slice","items","filter"],"sources":["C:/Users/mcarn/OneDrive/Documents/CSC4370 - MyWebPro/CW8/my-app/src/FilteredList.jsx"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { DropdownButton, Dropdown } from 'react-bootstrap';\r\nimport List from './List';\r\n\r\nclass FilteredList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // Add a new key/value pair in the state to keep track of type\r\n    this.state = {\r\n      search: \"\",\r\n      type: \"all\", // \"all\" initially to show all produce\r\n    };\r\n  }\r\n\r\n  // Sets the state whenever the user types on the search bar\r\n  onSearch = (event) => {\r\n    this.setState({ search: event.target.value.toLowerCase() });\r\n  }\r\n\r\n  // TODO: Add a new method to handle dropdown selection\r\n  handleTypeChange = (type) => {\r\n    this.setState({ type });\r\n  }\r\n\r\n  // TODO: Add a new method to filter produce based on type\r\n  filterType = (item) => {\r\n    const { type } = this.state;\r\n    return type === \"all\" || item.type.toLowerCase() === type.toLowerCase();\r\n  }\r\n\r\n  // TODO: Modify filterItem to consider both search and type filters\r\n  filterItem = (item) => {\r\n    return (\r\n      item.name.toLowerCase().search(this.state.search) !== -1 &&\r\n      this.filterType(item)\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const produceTypes = [\"all\", \"fruit\", \"vegetable\"]; // Add other types as needed\r\n\r\n    return (\r\n      <div className=\"filter-list\">\r\n        <h1>Produce Search</h1>\r\n        <input type=\"text\" placeholder=\"Search\" onChange={this.onSearch} />\r\n\r\n        {/* TODO: Add DropdownButton and Dropdown.Item components */}\r\n        <DropdownButton\r\n          title={`Filter by Type: ${this.state.type}`}\r\n          id=\"produce-type-dropdown\"\r\n          onSelect={this.handleTypeChange}\r\n        >\r\n          {produceTypes.map((type) => (\r\n            <Dropdown.Item key={type} eventKey={type}>\r\n              {type.charAt(0).toUpperCase() + type.slice(1)}\r\n            </Dropdown.Item>\r\n          ))}\r\n        </DropdownButton>\r\n\r\n        {/* Pass the filtered produce to the List component */}\r\n        <List items={this.props.items.filter(this.filterItem)} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FilteredList;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,KAAQ,OAAO,CACxC,OAASC,cAAc,CAAEC,QAAQ,KAAQ,iBAAiB,CAC1D,MAAO,CAAAC,IAAI,KAAM,QAAQ,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE1B,KAAM,CAAAC,YAAY,QAAS,CAAAR,SAAU,CACnCS,WAAWA,CAACC,KAAK,CAAE,CACjB,KAAK,CAACA,KAAK,CAAC,CACZ;AAOF;AAAA,KACAC,QAAQ,CAAIC,KAAK,EAAK,CACpB,IAAI,CAACC,QAAQ,CAAC,CAAEC,MAAM,CAAEF,KAAK,CAACG,MAAM,CAACC,KAAK,CAACC,WAAW,CAAC,CAAE,CAAC,CAAC,CAC7D,CAAC,CAED;AAAA,KACAC,gBAAgB,CAAIC,IAAI,EAAK,CAC3B,IAAI,CAACN,QAAQ,CAAC,CAAEM,IAAK,CAAC,CAAC,CACzB,CAAC,CAED;AAAA,KACAC,UAAU,CAAIC,IAAI,EAAK,CACrB,KAAM,CAAEF,IAAK,CAAC,CAAG,IAAI,CAACG,KAAK,CAC3B,MAAO,CAAAH,IAAI,GAAK,KAAK,EAAIE,IAAI,CAACF,IAAI,CAACF,WAAW,CAAC,CAAC,GAAKE,IAAI,CAACF,WAAW,CAAC,CAAC,CACzE,CAAC,CAED;AAAA,KACAM,UAAU,CAAIF,IAAI,EAAK,CACrB,MACE,CAAAA,IAAI,CAACG,IAAI,CAACP,WAAW,CAAC,CAAC,CAACH,MAAM,CAAC,IAAI,CAACQ,KAAK,CAACR,MAAM,CAAC,GAAK,CAAC,CAAC,EACxD,IAAI,CAACM,UAAU,CAACC,IAAI,CAAC,CAEzB,CAAC,CA5BC,IAAI,CAACC,KAAK,CAAG,CACXR,MAAM,CAAE,EAAE,CACVK,IAAI,CAAE,KAAO;AACf,CAAC,CACH,CA0BAM,MAAMA,CAAA,CAAG,CACP,KAAM,CAAAC,YAAY,CAAG,CAAC,KAAK,CAAE,OAAO,CAAE,WAAW,CAAC,CAAE;AAEpD,mBACEnB,KAAA,QAAKoB,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BvB,IAAA,OAAAuB,QAAA,CAAI,gBAAc,CAAI,CAAC,cACvBvB,IAAA,UAAOc,IAAI,CAAC,MAAM,CAACU,WAAW,CAAC,QAAQ,CAACC,QAAQ,CAAE,IAAI,CAACnB,QAAS,CAAE,CAAC,cAGnEN,IAAA,CAACJ,cAAc,EACb8B,KAAK,oBAAAC,MAAA,CAAqB,IAAI,CAACV,KAAK,CAACH,IAAI,CAAG,CAC5Cc,EAAE,CAAC,uBAAuB,CAC1BC,QAAQ,CAAE,IAAI,CAAChB,gBAAiB,CAAAU,QAAA,CAE/BF,YAAY,CAACS,GAAG,CAAEhB,IAAI,eACrBd,IAAA,CAACH,QAAQ,CAACkC,IAAI,EAAYC,QAAQ,CAAElB,IAAK,CAAAS,QAAA,CACtCT,IAAI,CAACmB,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAAGpB,IAAI,CAACqB,KAAK,CAAC,CAAC,CAAC,EAD3BrB,IAEL,CAChB,CAAC,CACY,CAAC,cAGjBd,IAAA,CAACF,IAAI,EAACsC,KAAK,CAAE,IAAI,CAAC/B,KAAK,CAAC+B,KAAK,CAACC,MAAM,CAAC,IAAI,CAACnB,UAAU,CAAE,CAAE,CAAC,EACtD,CAAC,CAEV,CACF,CAEA,cAAe,CAAAf,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}